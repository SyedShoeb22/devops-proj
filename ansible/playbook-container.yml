- hosts: servers
  become: yes
  vars_files:
    - users.yml
  vars:
    notebook_dir: /opt/pyspark-notebooks
    
handlers:
  - name: Restart ssh safely
    block:
      - name: Validate sshd_config
        command: sshd -t
        register: sshd_check
        failed_when: sshd_check.rc != 0

      - name: Restart ssh
        service:
          name: ssh
          state: restarted
    rescue:
      - name: Restore sshd_config backup
        copy:
          src: /etc/ssh/sshd_config.bak
          dest: /etc/ssh/sshd_config
          remote_src: yes

      - name: Restart ssh after restore
        service:
          name: ssh
          state: restarted

  tasks:
    - name: Backup sshd_config
      copy:
        src: /etc/ssh/sshd_config
        dest: /etc/ssh/sshd_config.bak
        remote_src: yes

    - name: Validate sshd_config syntax before change
      command: sshd -t
      register: sshd_check
      failed_when: sshd_check.rc != 0

    - name: Ensure Port 22 exists in sshd_config
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^Port 22'
        line: "Port 22"
      notify: Restart ssh safely

    - name: Add new SSH ports for each user
      lineinfile:
        path: /etc/ssh/sshd_config
        insertafter: '^Port 22'
        line: "Port {{ item.port }}"
      loop: "{{ users }}"
      notify: Restart ssh safely

    - name: Add user-specific ports
      lineinfile:
        path: /etc/ssh/sshd_config
        line: "Port {{ item.port }}"
        state: present
      loop: "{{ users }}"
      notify: Restart ssh safely
      
    # USER CREATION
    - name: Create users with hashed passwords
      user:
        name: "{{ item.username }}"
        password: "{{ item.password | password_hash('sha512') }}"
        shell: /bin/bash
        state: present
        create_home: yes
      loop: "{{ users }}"

    - name: Ensure .ssh directory exists for each user
      file:
        path: "/home/{{ item.username }}/.ssh"
        state: directory
        owner: "{{ item.username }}"
        group: "{{ item.username }}"
        mode: '0700'
      loop: "{{ users }}"

    - name: Add users to docker group
      user:
        name: "{{ item.username }}"
        groups: docker
        append: yes
      loop: "{{ users }}"

    - name: Add users to sudo group
      user:
        name: "{{ item.username }}"
        groups: sudo
        append: yes
      loop: "{{ users }}"

    # SSH CONFIG
    - name: Allow default SSH port 22 in UFW
      community.general.ufw:
        rule: allow
        port: "22"
        proto: tcp

    - name: Ensure Port 22 exists in sshd_config
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^Port 22'
        line: "Port 22"
        state: present
      notify: Restart ssh safely

    - name: Add new SSH ports for each user (keep Port 22 intact)
      lineinfile:
        path: /etc/ssh/sshd_config
        insertafter: '^Port 22'
        line: "Port {{ item.port }}"
        state: present
      loop: "{{ users }}"
      notify: Restart ssh safely

    - name: Allow new SSH ports in UFW
      community.general.ufw:
        rule: allow
        port: "{{ item.port }}"
        proto: tcp
      loop: "{{ users }}"

    - name: Enable UFW firewall
      community.general.ufw:
        state: enabled
        policy: allow
