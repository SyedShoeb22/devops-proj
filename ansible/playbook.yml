- hosts: servers
  become: yes
  collections:
    - community.docker

  vars:
    users:
      - username: shoeb
        password: "Shoeb@123"
        email: syedshoeb8380@gmail.com
      - username: abrar
        password: "Abrar@123"
        email: syedabrar7757@gmail.com
    notebook_dir: /opt/notebooks

  tasks:

    - name: Install Docker
      apt:
        name: docker.io
        state: present
        update_cache: yes

    - name: Start and enable Docker service
      service:
        name: docker
        state: started
        enabled: yes

    - name: Create users with hashed passwords
      user:
        name: "{{ item.username }}"
        password: "{{ item.password | password_hash('sha512') }}"
        shell: /bin/bash
        state: present
        create_home: yes
      loop: "{{ users }}"

    - name: Ensure .ssh directory exists
      file:
        path: "/home/{{ item.username }}/.ssh"
        state: directory
        owner: "{{ item.username }}"
        group: "{{ item.username }}"
        mode: '0700'
      loop: "{{ users }}"

    - name: Copy SSH public key for users
      copy:
        src: "~/.ssh/id_rsa.pub"
        dest: "/home/{{ item.username }}/.ssh/authorized_keys"
        owner: "{{ item.username }}"
        group: "{{ item.username }}"
        mode: '0600'
      loop: "{{ users }}"
      
    - name: Add users to docker group
      user:
        name: "{{ item.username }}"
        groups: docker
        append: yes
      loop: "{{ users }}"

    - name: Add users to Sudo group
      user:
        name: "{{ item.username }}"
        groups: sudo
        append: yes
      loop: "{{ users }}"

    - name: Ensure SSH allows password authentication
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^PasswordAuthentication'
        line: 'PasswordAuthentication yes'
        state: present
    
    - name: Ensure ChallengeResponseAuthentication is no
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^ChallengeResponseAuthentication'
        line: 'ChallengeResponseAuthentication no'
        state: present
    
    - name: Restart SSH daemon
      service:
        name: ssh
        state: restarted

